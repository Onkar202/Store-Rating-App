{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A-Users\\\\Desktop\\\\Store Rating App\\\\frontend\\\\src\\\\components\\\\NormalStoreList\\\\NormalStoreList.jsx\";\nimport React from \"react\";\n// import axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NormalStore = () => {\n  // const fetchCurrentUserId = async () => {\n  //   try {\n  //     const response = await axios.post('http://localhost:5000/current-user-id');\n  //     console.log(response.data.userId);\n  //   } catch (error) {\n  //     console.error('Error fetching current user ID:', error);\n\n  //   }\n  // };\n\n  const authenticate = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/current-user-id', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include' // Include cookies in the request\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('User is authenticated:', data);\n      } else {\n        console.log('User is not authenticated');\n      }\n    } catch (error) {\n      console.error('Error during authentication:', error);\n    }\n  };\n\n  // function authenticate() {\n  //   fetch('http://localhost:5000/current-user-id', {\n  //     credentials: 'include' // Ensure cookies are sent\n  //   })\n  //   .then(response => response.json())\n  //   .then(data => {\n  //     console.log('User authenticated, userId:', data.userId);\n  //   })\n  //   .catch(error => {\n  //     console.error('Authentication failed:', error);\n  //   });\n  // }\n\n  // Server-side code (Node.js example)\n  // app.post('/login', (req, res) => {\n  //   // Authenticate the user\n  //   // ...\n\n  //   // Create a session\n  //   req.session.userId = user.id;\n  //   req.session.save();\n\n  //   // Return a session token\n  //   res.json({ token: req.sessionID });\n  // });\n\n  // app.get('/protected-resource', (req, res) => {\n  //   // Check if the user is authenticated\n  //   if (!req.session.userId) {\n  //     return res.status(401).send('Unauthorized');\n  //   }\n\n  // Access the protected resource\n  // ...\n  // });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: authenticate,\n      children: \"userId\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = NormalStore;\nexport default NormalStore;\nvar _c;\n$RefreshReg$(_c, \"NormalStore\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","NormalStore","authenticate","response","fetch","method","headers","credentials","ok","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/A-Users/Desktop/Store Rating App/frontend/src/components/NormalStoreList/NormalStoreList.jsx"],"sourcesContent":["import React from \"react\";\r\n// import axios from 'axios';\r\n\r\nconst NormalStore = () =>{\r\n  // const fetchCurrentUserId = async () => {\r\n  //   try {\r\n  //     const response = await axios.post('http://localhost:5000/current-user-id');\r\n  //     console.log(response.data.userId);\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching current user ID:', error);\r\n      \r\n  //   }\r\n  // };\r\n  \r\n\r\n  const authenticate = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/current-user-id', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include', // Include cookies in the request\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('User is authenticated:', data);\r\n      } else {\r\n        console.log('User is not authenticated');\r\n      }\r\n  \r\n    } catch (error) {\r\n      console.error('Error during authentication:', error);\r\n    }\r\n  };\r\n  \r\n  // function authenticate() {\r\n  //   fetch('http://localhost:5000/current-user-id', {\r\n  //     credentials: 'include' // Ensure cookies are sent\r\n  //   })\r\n  //   .then(response => response.json())\r\n  //   .then(data => {\r\n  //     console.log('User authenticated, userId:', data.userId);\r\n  //   })\r\n  //   .catch(error => {\r\n  //     console.error('Authentication failed:', error);\r\n  //   });\r\n  // }\r\n  \r\n\r\n// Server-side code (Node.js example)\r\n// app.post('/login', (req, res) => {\r\n//   // Authenticate the user\r\n//   // ...\r\n\r\n//   // Create a session\r\n//   req.session.userId = user.id;\r\n//   req.session.save();\r\n\r\n//   // Return a session token\r\n//   res.json({ token: req.sessionID });\r\n// });\r\n\r\n// app.get('/protected-resource', (req, res) => {\r\n//   // Check if the user is authenticated\r\n//   if (!req.session.userId) {\r\n//     return res.status(401).send('Unauthorized');\r\n//   }\r\n\r\n  // Access the protected resource\r\n  // ...\r\n// });\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n  return(\r\n    <>\r\n    <div>Hello</div>\r\n    <button onClick={authenticate}>userId</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NormalStore"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAK;EACvB;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,WAAW,EAAE,SAAS,CAAE;MAC1B,CAAC,CAAC;MAEF,IAAIJ,QAAQ,CAACK,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,IAAI,CAAC;MAC7C,CAAC,MAAM;QACLE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC1C;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGF;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEE;EACA;EACF;;EAQE,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACAhB,OAAA;MAAAgB,QAAA,EAAK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBpB,OAAA;MAAQqB,OAAO,EAAEjB,YAAa;MAAAY,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC5C,CAAC;AAEP,CAAC;AAAAE,EAAA,GAnFKnB,WAAW;AAqFjB,eAAeA,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}