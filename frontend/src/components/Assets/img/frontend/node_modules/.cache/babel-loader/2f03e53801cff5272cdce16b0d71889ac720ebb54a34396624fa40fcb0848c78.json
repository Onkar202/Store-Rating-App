{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A-Users\\\\Desktop\\\\Store Rating App\\\\frontend\\\\src\\\\components\\\\ListStore\\\\ListStore.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListStore = () => {\n  _s();\n  const [stores, setStores] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Function to fetch store data\n    const fetchStores = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/stores'); // Replace with your API endpoint\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setStores(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchStores();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-Store-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: stores.map(store => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: store.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", store.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Address: \", store.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", store.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: store.image,\n            alt: store.name,\n            style: {\n              width: '100px',\n              height: '100px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, store._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ListStore, \"Ltt7DrNXtWp5e5MqoV/WEw6oxSU=\");\n_c = ListStore;\nexport default ListStore;\nvar _c;\n$RefreshReg$(_c, \"ListStore\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ListStore","_s","stores","setStores","loading","setLoading","error","setError","useEffect","fetchStores","response","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","store","name","email","address","rating","src","image","alt","style","width","height","_id","_c","$RefreshReg$"],"sources":["C:/Users/A-Users/Desktop/Store Rating App/frontend/src/components/ListStore/ListStore.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\nconst ListStore = () =>{\r\n    const [stores, setStores] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);    useEffect(() => {\r\n        // Function to fetch store data\r\n        const fetchStores = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/stores'); // Replace with your API endpoint\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setStores(data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError(err.message);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchStores();\r\n    }, []); \r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error: {error}</p>;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"list-Store-container\">\r\n            <ul>\r\n                {stores.map((store) => (\r\n                    <li key={store._id}>\r\n                        <h2>{store.name}</h2>\r\n                        <p>Email: {store.email}</p>\r\n                        <p>Address: {store.address}</p>\r\n                        <p>Rating: {store.rating}</p>\r\n                        <img src={store.image} alt={store.name} style={{ width: '100px', height: '100px' }} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ListStore"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}