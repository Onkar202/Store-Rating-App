{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A-Users\\\\Desktop\\\\Store Rating App\\\\frontend\\\\src\\\\components\\\\NormalStoreList\\\\NormalStoreList.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NormalStoreList = () => {\n  _s();\n  // const [allStore, setAllStore] = useState([]);\n  // const [filter, setFilter] = useState('');\n  // const [userRatings, setUserRatings] = useState({});\n  const [currentUserId, setCurrentUserId] = useState(null);\n\n  // Function to fetch the current user ID\n  const fetchCurrentUserId = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/current-user-id\", {\n        withCredentials: true\n      });\n      if (response.data.userId) {\n        setCurrentUserId(response.data.userId);\n      }\n    } catch (error) {\n      console.error(\"Error fetching current user ID:\", error);\n    }\n  };\n\n  // Function to fetch stores from the API\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"store-container\">\n    //   <input\n    //     type=\"text\"\n    //     placeholder=\"Filter by name, email, or address\"\n    //     value={filter}\n    //     onChange={(e) => setFilter(e.target.value)}\n    //     className=\"filter-input\"\n    //   />\n    //   <table>\n    //     <thead>\n    //       <tr className=\"store-header\">\n    //         <th>Image</th>\n    //         <th>Name</th>\n    //         <th>Email</th>\n    //         <th>Address</th>\n    //         <th>Overall Rating</th>\n    //         <th>Your Rating</th>\n    //         <th>Submit/Update Rating</th>\n    //       </tr>\n    //     </thead>\n    //     <tbody>\n    //       {filteredStores.length > 0 ? (\n    //         filteredStores.map((store) => (\n    //           <tr key={store._id} className=\"store-item\">\n    //             <td><img src={store.image} alt={store.name} /></td>\n    //             <td>{store.name}</td>\n    //             <td>{store.email}</td>\n    //             <td>{store.address}</td>\n    //             <td>{store.rating_count > 0 ? (store.rating / store.rating_count).toFixed(1) : \"No rating\"}</td>\n    //             <td>\n    //               {currentUserId ? (\n    //                 <span>{userRatings[currentUserId] || \"No rating\"}</span>\n    //               ) : (\n    //                 <span>Loading...</span>\n    //               )}\n    //             </td>\n    //             <td>\n    //               <select\n    //                 value={userRatings[currentUserId] || 0}\n    //                 onChange={(e) => handleRatingChange(currentUserId, parseInt(e.target.value))}\n    //               >\n    //                 <option value=\"0\">Rate...</option>\n    //                 {[1, 2, 3, 4, 5].map(value => (\n    //                   <option key={value} value={value}>{value}</option>\n    //                 ))}\n    //               </select>\n    //               <button onClick={() => handleSubmitRating(store._id)}>\n    //                 Submit/Update Rating\n    //               </button>\n    //             </td>\n    //           </tr>\n    //         ))\n    //       ) : (\n    //         <tr>\n    //           <td colSpan=\"7\">No stores available</td>\n    //         </tr>\n    //       )}\n    //     </tbody>\n    //   </table>\n    // </div>\n    _jsxDEV(\"button\", {\n      onClick: fetchCurrentUserId,\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(NormalStoreList, \"u2IeqJJQnskJVDQjCg061oUrkTQ=\");\n_c = NormalStoreList;\nexport default NormalStoreList;\nvar _c;\n$RefreshReg$(_c, \"NormalStoreList\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","NormalStoreList","_s","currentUserId","setCurrentUserId","fetchCurrentUserId","response","get","withCredentials","data","userId","error","console","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/A-Users/Desktop/Store Rating App/frontend/src/components/NormalStoreList/NormalStoreList.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst NormalStoreList = () => {\r\n  // const [allStore, setAllStore] = useState([]);\r\n  // const [filter, setFilter] = useState('');\r\n  // const [userRatings, setUserRatings] = useState({});\r\n  const [currentUserId, setCurrentUserId] = useState(null);\r\n\r\n  // Function to fetch the current user ID\r\n  const fetchCurrentUserId = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/current-user-id\", { withCredentials: true });\r\n      if (response.data.userId) {\r\n        setCurrentUserId(response.data.userId);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching current user ID:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to fetch stores from the API\r\n\r\n\r\n  return (\r\n    // <div className=\"store-container\">\r\n    //   <input\r\n    //     type=\"text\"\r\n    //     placeholder=\"Filter by name, email, or address\"\r\n    //     value={filter}\r\n    //     onChange={(e) => setFilter(e.target.value)}\r\n    //     className=\"filter-input\"\r\n    //   />\r\n    //   <table>\r\n    //     <thead>\r\n    //       <tr className=\"store-header\">\r\n    //         <th>Image</th>\r\n    //         <th>Name</th>\r\n    //         <th>Email</th>\r\n    //         <th>Address</th>\r\n    //         <th>Overall Rating</th>\r\n    //         <th>Your Rating</th>\r\n    //         <th>Submit/Update Rating</th>\r\n    //       </tr>\r\n    //     </thead>\r\n    //     <tbody>\r\n    //       {filteredStores.length > 0 ? (\r\n    //         filteredStores.map((store) => (\r\n    //           <tr key={store._id} className=\"store-item\">\r\n    //             <td><img src={store.image} alt={store.name} /></td>\r\n    //             <td>{store.name}</td>\r\n    //             <td>{store.email}</td>\r\n    //             <td>{store.address}</td>\r\n    //             <td>{store.rating_count > 0 ? (store.rating / store.rating_count).toFixed(1) : \"No rating\"}</td>\r\n    //             <td>\r\n    //               {currentUserId ? (\r\n    //                 <span>{userRatings[currentUserId] || \"No rating\"}</span>\r\n    //               ) : (\r\n    //                 <span>Loading...</span>\r\n    //               )}\r\n    //             </td>\r\n    //             <td>\r\n    //               <select\r\n    //                 value={userRatings[currentUserId] || 0}\r\n    //                 onChange={(e) => handleRatingChange(currentUserId, parseInt(e.target.value))}\r\n    //               >\r\n    //                 <option value=\"0\">Rate...</option>\r\n    //                 {[1, 2, 3, 4, 5].map(value => (\r\n    //                   <option key={value} value={value}>{value}</option>\r\n    //                 ))}\r\n    //               </select>\r\n    //               <button onClick={() => handleSubmitRating(store._id)}>\r\n    //                 Submit/Update Rating\r\n    //               </button>\r\n    //             </td>\r\n    //           </tr>\r\n    //         ))\r\n    //       ) : (\r\n    //         <tr>\r\n    //           <td colSpan=\"7\">No stores available</td>\r\n    //         </tr>\r\n    //       )}\r\n    //     </tbody>\r\n    //   </table>\r\n    // </div>\r\n    <button onClick={fetchCurrentUserId}>hello</button>\r\n    \r\n  );\r\n};\r\n\r\nexport default NormalStoreList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA;EACA;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAMO,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,2CAA2C,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;MACxG,IAAIF,QAAQ,CAACG,IAAI,CAACC,MAAM,EAAE;QACxBN,gBAAgB,CAACE,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC;MACxC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;;EAED;;EAGA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAX,OAAA;MAAQa,OAAO,EAAER,kBAAmB;MAAAS,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;AAGvD,CAAC;AAAChB,EAAA,CArFID,eAAe;AAAAkB,EAAA,GAAflB,eAAe;AAuFrB,eAAeA,eAAe;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}