{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A-Users\\\\Desktop\\\\Store Rating App\\\\frontend\\\\src\\\\components\\\\NormalStoreList\\\\NormalStoreList.jsx\";\nimport React from \"react\";\nimport axios from 'axios';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NormalStore = () => {\n  const uid = () => {\n    axios.get('http://localhost:5000/current-user-id');\n    console.log(Response.data);\n  };\n  //     console.log(response.data.userId);\n  //   } catch (error) {\n  //     console.error('Error fetching current user ID:', error);\n\n  //   }\n  // };\n\n  //   const login = async () => {\n  //     try {\n  //         const response = await fetch('http://localhost:5000/login', {\n  //             method: 'POST',\n  //             headers: {\n  //                 'Content-Type': 'application/json',\n  //             },\n  //             body: JSON.stringify({ email, password, role }),\n  //         });\n\n  //         const data = await response.json();\n\n  //         if (response.ok) {\n  //             if (data.success) {\n  //                 // Redirect based on the role\n  //                 if (role === 'Admin') {\n  //                     navigate('/adminDashboard');\n  //                 } else if (role === 'Store-Owner') {\n  //                     navigate('/adminDashboard');\n  //                 } else {\n  //                     navigate('/normalDashboard');\n  //                 }\n  //             } else {\n  //                 setError(data.message || 'Login failed');\n  //             }\n  //         } else {\n  //             setError(data.message || 'Network error or server issue');\n  //         }\n  //     } catch (error) {\n  //         console.error('Error during login:', error);\n  //         setError('Invalid email or password');\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uid,\n      children: \"userId\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = NormalStore;\nexport default NormalStore;\nvar _c;\n$RefreshReg$(_c, \"NormalStore\");","map":{"version":3,"names":["React","axios","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","NormalStore","uid","get","console","log","Response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/A-Users/Desktop/Store Rating App/frontend/src/components/NormalStoreList/NormalStoreList.jsx"],"sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport { useEffect } from \"react\";\r\n\r\nconst NormalStore = () =>{\r\n  const uid = () => {\r\n    axios.get('http://localhost:5000/current-user-id')\r\n    console.log(Response.data);\r\n      \r\n}\r\n  //     console.log(response.data.userId);\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching current user ID:', error);\r\n      \r\n  //   }\r\n  // };\r\n\r\n//   const login = async () => {\r\n//     try {\r\n//         const response = await fetch('http://localhost:5000/login', {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify({ email, password, role }),\r\n//         });\r\n\r\n//         const data = await response.json();\r\n\r\n//         if (response.ok) {\r\n//             if (data.success) {\r\n//                 // Redirect based on the role\r\n//                 if (role === 'Admin') {\r\n//                     navigate('/adminDashboard');\r\n//                 } else if (role === 'Store-Owner') {\r\n//                     navigate('/adminDashboard');\r\n//                 } else {\r\n//                     navigate('/normalDashboard');\r\n//                 }\r\n//             } else {\r\n//                 setError(data.message || 'Login failed');\r\n//             }\r\n//         } else {\r\n//             setError(data.message || 'Network error or server issue');\r\n//         }\r\n//     } catch (error) {\r\n//         console.error('Error during login:', error);\r\n//         setError('Invalid email or password');\r\n//     }\r\n// };\r\n\r\n  \r\n\r\n\r\n\r\n  return(\r\n    <>\r\n    <div>Hello</div>\r\n    <button onClick={uid}>userId</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NormalStore"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,WAAW,GAAGA,CAAA,KAAK;EACvB,MAAMC,GAAG,GAAGA,CAAA,KAAM;IAChBP,KAAK,CAACQ,GAAG,CAAC,uCAAuC,CAAC;IAClDC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACC,IAAI,CAAC;EAE9B,CAAC;EACC;EACA;EACA;;EAEA;EACA;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAME,oBACET,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACAV,OAAA;MAAAU,QAAA,EAAK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBd,OAAA;MAAQe,OAAO,EAAEX,GAAI;MAAAM,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACnC,CAAC;AAEP,CAAC;AAAAE,EAAA,GAzDKb,WAAW;AA2DjB,eAAeA,WAAW;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}