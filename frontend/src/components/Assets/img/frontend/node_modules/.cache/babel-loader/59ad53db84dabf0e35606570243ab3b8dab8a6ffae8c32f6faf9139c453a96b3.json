{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A-Users\\\\Desktop\\\\Store Rating App\\\\frontend\\\\src\\\\components\\\\ListStore\\\\ListStore.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./ListStore.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListStore = () => {\n  _s();\n  const [allStore, setAllStore] = useState([]);\n\n  // Function to fetch stores from the API\n  const fetchStores = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/stores\"); // Make a GET request to /stores endpoint\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json(); // Parse the JSON data from the response\n      setAllStore(data); // Update the state with the fetched store data\n    } catch (error) {\n      console.error(\"Error fetching stores:\", error);\n    }\n  };\n\n  // Fetch stores when the component mounts\n  useEffect(() => {\n    fetchStores();\n  }, []);\n  const handleRemove = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/stores/${id}`); // Adjust to match your API endpoint\n      setAllStore(allStore.filter(store => store.id !== id));\n    } catch (error) {\n      console.error(\"Error removing store:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchStores();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div className=\"list-Store-header\">\n    //   <h1>Product List</h1>\n    //   <div className=\"liststore-format\">\n    //     <p>Image</p>\n    //     <p>Name</p>\n    //     <p>Email</p>\n    //     <p>Address</p>\n    //     <p>Ratings</p>\n    //     <p>Remove</p>\n    //     {/* <p>Average Rating</p>\n    //             <p>Total Users Submitted Rating</p>\n    //             <p>Remove</p> */}\n    //   </div>\n    //   <div className=\"listStore-allStore\">\n    //     {allStore.length > 0 ? (\n    //       allStore.map((store) => (\n    //         <div key={store._id} className=\"store-item\">\n    //           <img src={store.image} alt=\"\" />\n    //           <p>{store.name}</p>\n    //           <p>{store.email}</p>\n    //           <p>{store.address}</p>\n    //           <p>{store.rating}</p>\n    //           {/* <p>{store.totalRatings}</p> */}\n    //           <button onClick={() => handleRemove(store._id)}>Remove</button>\n    //         </div>\n    //       ))\n    //     ) : (\n    //       <p>No stores available</p>\n    //     )}\n    //     <hr />\n    //   </div>\n    // </div>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"store-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"store-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), allStore.length > 0 ? allStore.map(store => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"store-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: store.image,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: store.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: store.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: store.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: store.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: store.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleRemove(store._id),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)]\n          }, store._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)\n\n          //    {/* <p>{store.totalRatings}</p> */}\n          ) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No stores available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  );\n};\n\n// Optional: Function to handle store removal (you can implement this as needed)\n_s(ListStore, \"EL6p1zhyRkumdOKvHZ6zNp5OGBM=\");\n_c = ListStore;\nexport default ListStore;\nvar _c;\n$RefreshReg$(_c, \"ListStore\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ListStore","_s","allStore","setAllStore","fetchStores","response","fetch","ok","Error","data","json","error","console","handleRemove","id","delete","filter","store","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","src","image","alt","name","email","address","rating","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/A-Users/Desktop/Store Rating App/frontend/src/components/ListStore/ListStore.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ListStore.css\";\r\n\r\nconst ListStore = () => {\r\n  const [allStore, setAllStore] = useState([]);\r\n\r\n  // Function to fetch stores from the API\r\n  const fetchStores = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/stores\"); // Make a GET request to /stores endpoint\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n      const data = await response.json(); // Parse the JSON data from the response\r\n      setAllStore(data); // Update the state with the fetched store data\r\n    } catch (error) {\r\n      console.error(\"Error fetching stores:\", error);\r\n    }\r\n  };\r\n\r\n  // Fetch stores when the component mounts\r\n  useEffect(() => {\r\n    fetchStores();\r\n  }, []);\r\n\r\n  const handleRemove = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/stores/${id}`); // Adjust to match your API endpoint\r\n      setAllStore(allStore.filter((store) => store.id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error removing store:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStores();\r\n  }, []);\r\n\r\n  return (\r\n    // <div className=\"list-Store-header\">\r\n    //   <h1>Product List</h1>\r\n    //   <div className=\"liststore-format\">\r\n    //     <p>Image</p>\r\n    //     <p>Name</p>\r\n    //     <p>Email</p>\r\n    //     <p>Address</p>\r\n    //     <p>Ratings</p>\r\n    //     <p>Remove</p>\r\n    //     {/* <p>Average Rating</p>\r\n    //             <p>Total Users Submitted Rating</p>\r\n    //             <p>Remove</p> */}\r\n    //   </div>\r\n    //   <div className=\"listStore-allStore\">\r\n    //     {allStore.length > 0 ? (\r\n    //       allStore.map((store) => (\r\n    //         <div key={store._id} className=\"store-item\">\r\n    //           <img src={store.image} alt=\"\" />\r\n    //           <p>{store.name}</p>\r\n    //           <p>{store.email}</p>\r\n    //           <p>{store.address}</p>\r\n    //           <p>{store.rating}</p>\r\n    //           {/* <p>{store.totalRatings}</p> */}\r\n    //           <button onClick={() => handleRemove(store._id)}>Remove</button>\r\n    //         </div>\r\n    //       ))\r\n    //     ) : (\r\n    //       <p>No stores available</p>\r\n    //     )}\r\n    //     <hr />\r\n    //   </div>\r\n    // </div>\r\n    <>\r\n    <div className=\"store-container\">\r\n    <table>\r\n            <tr className=\"store-header\">\r\n                <td>Image</td>\r\n                <td>Name</td>\r\n                <td>Email</td>\r\n                <td>Address</td>\r\n                <td>Rating</td>\r\n                <td>Remove</td>\r\n            </tr>\r\n\r\n            {allStore.length > 0 ? (\r\n          allStore.map((store) => (\r\n                <tr key={store._id} className=\"store-item\">\r\n                    <td><img src={store.image} alt=\"\" /></td>\r\n                    <td>{store.name}</td>\r\n                    <td>{store.email}</td>\r\n                    <td>{store.address}</td>\r\n                    <td>{store.rating}</td>\r\n                    <td>{store.rating}</td>\r\n                    <td><button onClick={() => handleRemove(store._id)}>Remove</button></td>\r\n                </tr>               \r\n             \r\n            //    {/* <p>{store.totalRatings}</p> */}\r\n               \r\n           ))\r\n         ) : (\r\n           <p>No stores available</p>\r\n         )}\r\n        </table>\r\n    </div>\r\n     \r\n    </>\r\n  );\r\n};\r\n\r\n// Optional: Function to handle store removal (you can implement this as needed)\r\n\r\nexport default ListStore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}