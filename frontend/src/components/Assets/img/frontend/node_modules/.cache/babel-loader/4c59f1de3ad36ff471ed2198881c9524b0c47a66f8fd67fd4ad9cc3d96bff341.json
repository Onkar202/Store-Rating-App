{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A-Users\\\\Desktop\\\\Store Rating App\\\\frontend\\\\src\\\\components\\\\ListStore\\\\ListStore.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListStore = () => {\n  _s();\n  const [allStore, setAllStore] = useState([]);\n\n  // Function to fetch stores from the API\n  const fetchStores = async () => {\n    try {\n      const response = await fetch('/stores'); // Make a GET request to /stores endpoint\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json(); // Parse the JSON data from the response\n      setAllStore(data); // Update the state with the fetched store data\n    } catch (error) {\n      console.error('Error fetching stores:', error);\n    }\n  };\n\n  // Fetch stores when the component mounts\n  useEffect(() => {\n    fetchStores();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-Store-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"liststore-format\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ratings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listStore-allStore\",\n      children: [allStore.length > 0 ? allStore.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"store-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.tating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemove(store._id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, store._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No stores available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n// Optional: Function to handle store removal (you can implement this as needed)\n_s(ListStore, \"6Spq9IyL495lGhptm1czP8jrPK4=\");\n_c = ListStore;\nconst handleRemove = async storeId => {\n  try {\n    await fetch(`/stores/${storeId}`, {\n      method: 'DELETE'\n    });\n    // After removing, you might want to refetch the stores or update the state accordingly\n  } catch (error) {\n    console.error('Error removing store:', error);\n  }\n};\nexport default ListStore;\nvar _c;\n$RefreshReg$(_c, \"ListStore\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ListStore","_s","allStore","setAllStore","fetchStores","response","fetch","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","store","image","name","email","address","tating","onClick","handleRemove","_id","_c","storeId","method","$RefreshReg$"],"sources":["C:/Users/A-Users/Desktop/Store Rating App/frontend/src/components/ListStore/ListStore.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst ListStore = () => {\r\n    const [allStore, setAllStore] = useState([]);\r\n\r\n    // Function to fetch stores from the API\r\n    const fetchStores = async () => {\r\n        try {\r\n            const response = await fetch('/stores'); // Make a GET request to /stores endpoint\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await response.json(); // Parse the JSON data from the response\r\n            setAllStore(data); // Update the state with the fetched store data\r\n        } catch (error) {\r\n            console.error('Error fetching stores:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch stores when the component mounts\r\n    useEffect(() => {\r\n        fetchStores();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"list-Store-container\">\r\n            <h1>Product List</h1>\r\n            <div className=\"liststore-format\">\r\n                <p>Image</p>\r\n                <p>Name</p>\r\n                <p>Email</p>\r\n                <p>Address</p>\r\n                <p>Ratings</p>\r\n                {/* <p>Average Rating</p>\r\n                <p>Total Users Submitted Rating</p>\r\n                <p>Remove</p> */}\r\n            </div>\r\n            <div className=\"listStore-allStore\">\r\n                {allStore.length > 0 ? (\r\n                    allStore.map((store) => (\r\n                        <div key={store._id} className=\"store-item\">\r\n                            <p>{store.image}</p>\r\n                            <p>{store.name}</p>\r\n                            <p>{store.email}</p>\r\n                            <p>{store.address}</p>\r\n                            <p>{store.tating}</p>\r\n                            {/* <p>{store.totalRatings}</p> */}\r\n                            <button onClick={() => handleRemove(store._id)}>Remove</button>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No stores available</p>\r\n                )}\r\n                <hr />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Optional: Function to handle store removal (you can implement this as needed)\r\nconst handleRemove = async (storeId) => {\r\n    try {\r\n        await fetch(`/stores/${storeId}`, {\r\n            method: 'DELETE'\r\n        });\r\n        // After removing, you might want to refetch the stores or update the state accordingly\r\n    } catch (error) {\r\n        console.error('Error removing store:', error);\r\n    }\r\n};\r\n\r\nexport default ListStore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}