{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A-Users\\\\Desktop\\\\Store Rating App\\\\frontend\\\\src\\\\components\\\\storeDashboard\\\\storeDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// import { useState,useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst storeDashboard = () => {\n  _s();\n  const [averageRating, setAverageRating] = useState(null);\n  const [ratingCount, setRatingCount] = useState(0);\n  const [usersWhoRated, setUsersWhoRated] = useState([]);\n  const [store, setStore] = useState(null); // To display the store details of the logged-in store owner\n  const navigate = useNavigate();\n\n  // Fetch dashboard data when the component mounts\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        navigate(\"/\"); // If no token, redirect to login page\n        return;\n      }\n      try {\n        const response = await fetch(\"http://localhost:5000/store/dashboard\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setAverageRating(data.averageRating);\n          setRatingCount(data.ratingCount);\n          setUsersWhoRated(data.usersWhoRated);\n          setStore(data.store); // Store details of the logged-in store owner\n        } else {\n          console.error(data.message);\n        }\n      } catch (error) {\n        console.error(\"Error fetching dashboard data:\", error);\n      }\n    };\n    fetchDashboardData();\n  }, [navigate]);\n\n  // Handle Logout: clear token and navigate to login page\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Store Owner Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), store && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"store-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Your Store: \", store.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", store.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", store.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"average-rating\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Average Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ratingCount > 0 ? `${averageRating} (${ratingCount} ratings)` : \"No ratings yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-ratings\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Users Who Rated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), usersWhoRated.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: usersWhoRated.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [user.name, \" (\", user.email, \")\"]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No users have rated your store yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n};\n_s(storeDashboard, \"TgMLn9/fdiEXIhKC8ZlcHaCkvr8=\", false, function () {\n  return [useNavigate];\n});\nexport default storeDashboard;","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","storeDashboard","_s","averageRating","setAverageRating","useState","ratingCount","setRatingCount","usersWhoRated","setUsersWhoRated","store","setStore","navigate","useEffect","fetchDashboardData","token","localStorage","getItem","response","fetch","headers","Authorization","data","json","ok","console","error","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","email","address","length","map","user","_id"],"sources":["C:/Users/A-Users/Desktop/Store Rating App/frontend/src/components/storeDashboard/storeDashboard.jsx"],"sourcesContent":["import React from \"react\";\r\n// import { useState,useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst storeDashboard = () =>{\r\n    const [averageRating, setAverageRating] = useState(null);\r\n    const [ratingCount, setRatingCount] = useState(0);\r\n    const [usersWhoRated, setUsersWhoRated] = useState([]);\r\n    const [store, setStore] = useState(null); // To display the store details of the logged-in store owner\r\n    const navigate = useNavigate();\r\n\r\n  \r\n    // Fetch dashboard data when the component mounts\r\n    useEffect(() => {\r\n      const fetchDashboardData = async () => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n          navigate(\"/\"); // If no token, redirect to login page\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = await fetch(\"http://localhost:5000/store/dashboard\", {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n  \r\n          const data = await response.json();\r\n  \r\n          if (response.ok) {\r\n            setAverageRating(data.averageRating);\r\n            setRatingCount(data.ratingCount);\r\n            setUsersWhoRated(data.usersWhoRated);\r\n            setStore(data.store); // Store details of the logged-in store owner\r\n          } else {\r\n            console.error(data.message);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching dashboard data:\", error);\r\n        }\r\n      };\r\n  \r\n      fetchDashboardData();\r\n    }, [navigate]);\r\n  \r\n    // Handle Logout: clear token and navigate to login page\r\n  \r\n    return (\r\n        <>\r\n           <div className=\"dashboard\">\r\n          <h1>Store Owner Dashboard</h1>\r\n  \r\n          {/* Store Information */}\r\n          {store && (\r\n            <div className=\"store-info\">\r\n              <h2>Your Store: {store.name}</h2>\r\n              <p>Email: {store.email}</p>\r\n              <p>Address: {store.address}</p>\r\n            </div>\r\n          )}\r\n  \r\n          <div className=\"average-rating\">\r\n            <h2>Average Rating</h2>\r\n            <p>{ratingCount > 0 ? `${averageRating} (${ratingCount} ratings)` : \"No ratings yet\"}</p>\r\n          </div>\r\n  \r\n          <div className=\"user-ratings\">\r\n            <h2>Users Who Rated</h2>\r\n            {usersWhoRated.length > 0 ? (\r\n              <ul>\r\n                {usersWhoRated.map((user) => (\r\n                  <li key={user._id}>\r\n                    {user.name} ({user.email})\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No users have rated your store yet.</p>\r\n            )}\r\n          </div>\r\n        </div></>\r\n    )\r\n}\r\nexport default storeDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}